name: CI-Pipeline

on:
  push:

jobs:
  build:
    name: Build with Gradle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Permissions
        run: chmod +x sqsbackend/gradlew

      - name: Build with Gradle
        run: ./sqsbackend/gradlew build -p sqsbackend/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: sqsbackend/build/libs

  run-unit-tests-and-create-jacoco-report:
    name: Run unit tests and create jacoco report
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Permissions
        run: chmod +x sqsbackend/gradlew

      - name: Run unit tests
        run: ./sqsbackend/gradlew jacocoTestReport -p sqsbackend/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: sqsbackend/build/reports/jacoco

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY }}
          coverage-reports: sqsbackend/build/reports/jacoco/test/jacocoTestReport.xml

  run-playwright-tests:
    name: Run Playwright UI Tests
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set-up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Startup database docker container
        run: docker compose -f "./compose.yaml" up -d --build --wait --wait-timeout 30

      - name: Wait for frontend to become available
        working-directory: ./playwright
        run: |
          npm install
          npx playwright install --with-deps
          npm install wait-on
          npx wait-on http://localhost:3000

      - name: Run Playwright tests
        working-directory: ./playwright
        run: npx playwright test --reporter=html

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright/tests/playwright-report/